{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifCardItem.js","components/GifCard.js","GiphyApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","name","id","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","gif","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifCardItem","className","src","alt","GifCard","img","GiphyApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACE,sBAAMC,SARa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAIhB,SACE,uBACEO,KAAK,OACLC,KAAK,GACLC,GAAG,GACHC,MAAOX,EACPY,SAjBoB,SAACT,GACzBF,EAAcE,EAAEU,OAAOF,QAiBnBG,YAAY,qC,+BCvBdC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACRC,EADQ,0FACiFC,UAC7FH,GAFY,sBAIUI,MAAMF,GAJhB,cAIRG,EAJQ,gBAKSA,EAAUC,OALnB,uBAKNC,EALM,EAKNA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRiB,MAAOD,EAAIC,MACXT,IAAG,UAAEQ,EAAIE,cAAN,aAAE,EAAYC,iBAAiBX,QAVxB,kBAaPM,GAbO,4CAAH,sDAgBET,ICKAe,EAlBM,SAACd,GACpB,MAA0BjB,mBAAS,CACjCwB,KAAM,GACNQ,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRnB,EAAQC,GAAUmB,MAAK,SAACC,GACtBH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAACf,IAEGgB,GClBIK,EAAc,SAAC,GAAuB,EAArB3B,GAAsB,IAAlBiB,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACvC,OACE,sBAAKoB,UAAU,6CAAf,UACE,qBAAKC,IAAKrB,EAAKsB,IAAKb,IACpB,4BAAIA,QCqBKc,EArBC,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SACjB,EAAkCc,EAAad,GAAjCY,EAAd,EAAQL,KAAcQ,EAAtB,EAAsBA,QACtB,OACE,qCACE,oBAAIO,UAAU,wCAAd,SAAuDtB,IACtDe,EACC,mBAAGO,UAAU,mCAAb,qBACE,KACJ,qBAAKA,UAAU,YAAf,SACGV,EAAOH,KAAI,SAACiB,GACX,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIhC,aCYxBiC,EAtBE,WACf,MAAoC5C,mBAAS,CAAC,kBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAOA,OACE,qCACE,0CACA,uBACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACG8C,EAAWnB,KAAI,SAACT,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCd/B6B,IAASC,OAAO,cAAC,EAAD,IAAcC,SAASC,eAAe,W","file":"static/js/main.89439a2f.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        name=\"\"\r\n        id=\"\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Agrega una nueva categorÃ­a\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=dysfmo89xh2K79cyzQZRvXg2tA0XoEJ8&q=${encodeURI(\r\n    category\r\n  )}&limit=10`;\r\n  const respuesta = await fetch(url);\r\n  const { data } = await respuesta.json();\r\n  const gifs = data.map((gif) => {\r\n    return {\r\n      id: gif.id,\r\n      title: gif.title,\r\n      url: gif.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n\r\nexport default getGifs;\r\n","import { useState, useEffect } from \"react\";\r\nimport getGifs from \"../helpers/getGifs\";\r\n\r\nconst useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","export const GifCardItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInDown\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport useFetchGifs from \"../hooks/useFetchGifs\";\r\nimport { GifCardItem } from \"./GifCardItem\";\r\n\r\nconst GifCard = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeInDown\">{category}</h3>\r\n      {loading ? (\r\n        <p className=\"animate__animated animate__flash\">Loading</p>\r\n      ) : null}\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => {\r\n          return <GifCardItem key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nGifCard.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GifCard;\r\n","import { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifCard from \"./components/GifCard\";\r\n\r\nconst GiphyApp = () => {\r\n  const [categories, setCategories] = useState([\"One Punch Man\"]);\r\n\r\n  //   const handleAdd = () => {\r\n  //     setCategories([...categories, \"Kangoku Gakuen\"]);\r\n  // setCategories(cat => [...categories, \"Kangoku Gakuen\"]);\r\n  //   };\r\n\r\n  return (\r\n    <>\r\n      <h2>GiphyApp</h2>\r\n      <hr />\r\n      <AddCategory setCategories={setCategories} />\r\n      <ol>\r\n        {categories.map((category) => {\r\n          return <GifCard key={category} category={category} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GiphyApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GiphyApp from \"./GiphyApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GiphyApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}